version: '1.0'
services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackendapi:latest
    image: mcr.microsoft.com/dotnet/sdk:8.0
    working_dir: /app
    ports:
      - "5000:3001" # ajuste a porta conforme necess√°rio
    command: bash -c "dotnet restore && dotnet run"
    volumes:
      - ./app:/app    
    environment:
      PORT: 3001
      DB_HOST: localhost
      DB_POOL: 80
      RAILS_MAX_THREADS: 40
      WEB_CONCURRENCY: 2
      RAILS_LOG_LEVEL: warn
      RAILS_ENV: production
      REDIS_HOST: localhost
      REDIS_POOL_SIZE: 50
      JOB_BATCH_SIZE: 100
      CACHE_EXPIRES_SECONDS: 60
      RAILS_LOG_TO_STDOUT: 'true'
      RUBY_YJIT_ENABLE: 1
      RAILS_MASTER_KEY: 84ec93b5f81d27f8fdf7fc71d7b28e15
    hostname: api1
    # depends_on:
    #   - postgres
    #   - redis
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.5GB'

  api2:
    <<: *api
    hostname: api2
    environment:
      PORT: 3002

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'
